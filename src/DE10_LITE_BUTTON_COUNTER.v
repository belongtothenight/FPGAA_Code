
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module DE10_LITE_BUTTON_COUNTER(

	//////////// CLOCK //////////
	input 		          		ADC_CLK_10,
	input 		          		MAX10_CLK1_50,
	input 		          		MAX10_CLK2_50,

	//////////// SDRAM //////////
	output		    [12:0]		DRAM_ADDR,
	output		     [1:0]		DRAM_BA,
	output		          		DRAM_CAS_N,
	output		          		DRAM_CKE,
	output		          		DRAM_CLK,
	output		          		DRAM_CS_N,
	inout 		    [15:0]		DRAM_DQ,
	output		          		DRAM_LDQM,
	output		          		DRAM_RAS_N,
	output		          		DRAM_UDQM,
	output		          		DRAM_WE_N,

	//////////// SEG7 //////////
	output		     [7:0]		HEX0,
	output		     [7:0]		HEX1,
	output		     [7:0]		HEX2,
	output		     [7:0]		HEX3,
	output		     [7:0]		HEX4,
	output		     [7:0]		HEX5,

	//////////// KEY //////////
	input 		     [1:0]		KEY,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// SW //////////
	input 		     [9:0]		SW,

	//////////// VGA //////////
	output		     [3:0]		VGA_B,
	output		     [3:0]		VGA_G,
	output		          		VGA_HS,
	output		     [3:0]		VGA_R,
	output		          		VGA_VS,

	//////////// Accelerometer //////////
	output		          		GSENSOR_CS_N,
	input 		     [2:1]		GSENSOR_INT,
	output		          		GSENSOR_SCLK,
	inout 		          		GSENSOR_SDI,
	inout 		          		GSENSOR_SDO,

	//////////// Arduino //////////
	inout 		    [15:0]		ARDUINO_IO,
	inout 		          		ARDUINO_RESET_N,

	//////////// GPIO, GPIO connect to GPIO Default //////////
	inout 		    [35:0]		GPIO

);



//=======================================================
//  REG/WIRE declarations
//=======================================================

wire [6:0] count_SW, count_KEY;
wire [3:0] count_KEY_digit, count_KEY_ten;
wire [3:0] count_SW_digit, count_SW_ten;

//reg [3:0] digit0, digit1, digit2, digit3, digit4, digit5;

//=======================================================
//  Structural coding
//=======================================================

assign count_KEY_digit = count_KEY[6:0]%10;
assign count_KEY_ten   = (count_KEY[6:0]/10)%10;
assign count_SW_digit  = count_SW[6:0]%10;
assign count_SW_ten    = (count_SW[6:0]/10)%10;

//COUNTER_BUTTON ucounter(
//	.rst(SW[9]),
//	.KEY(KEY),
//	.SW(SW[1:0]),
//	.count_KEY(count_KEY),
//	.count_SW(count_SW)
//);

COUNTER_DEBOUNCE ucounter(
	.clk(MAX10_CLK1_50),
	.rst(SW[9]),
	.KEY(KEY),
	.SW(SW[1:0]),
	.count_KEY(count_KEY),
	.count_SW(count_SW)
);	

SEG7_LUT_6 u_seg(
	.oSEG0(HEX0),
	.oSEG1(HEX1),
	.oSEG2(HEX2),
	.oSEG3(HEX3),
	.oSEG4(HEX4),
	.oSEG5(HEX5),
	//.iDIG ({ digit5, digit4, digit3, digit2, digit1, digit0})
	.iDIG({4'he, count_SW_ten, count_SW_digit, 4'he, count_KEY_ten, count_KEY_digit})
);
	
endmodule
